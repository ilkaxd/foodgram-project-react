name: Foodgram-app workflow

on: [push, workflow_dispatch]

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository exists
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: make deps
      
      # - name: Apply isort, flake8
      #   run: make fix

      # - name: Test with django tests
      #   run: make test

  build_and_push_to_docker_hub:
    name: Build project and push it to docker hub
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
    - name: Check out
      uses: actions/checkout@v2

    - name: Set up Docker Build
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker 
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push backend to Docker Hub
      uses: docker/build-push-action@v2
      with:
        push: true
        file: 'backend/Dockerfile'
        tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

  deploy:
    name: Deploy server on Yandex.Cloud
    runs-on: ubuntu-latest
    needs: [build_and_push_to_docker_hub]
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Copy files via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: "infra/docker-compose.yml,infra/nginx.conf,frontend/,data/,docs/"
          target: "foodgram"
          overwrite: true

      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          scripts: |
            cd foodgram/
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
            sudo docker stop $(sudo docker ps -a -q)
            sudo docker run --rm -d -p 5000:5000 ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
            # cd infra/
            # sudo docker-compose down
            # sudo docker-compose rm -f backend
            # sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

            # touch .env
            # echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
            # echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            # echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            # echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            # echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            # echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            # echo DB_HOST=${{ secrets.DB_HOST }} >> .env 
            # echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            # echo DOMAIN_NAME=${{ secrets.DOMAIN_NAME }} >> .env

            # sudo docker-compose up --detach

            # sudo docker-compose exec -T backend python manage.py makemigrations --noinput
            # sudo docker-compose exec -T backend python manage.py migrate --noinput
            # sudo docker-compose exec -T backend python manage.py collectstatic --noinput

  send_message:
    name: Send message to telegram
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!