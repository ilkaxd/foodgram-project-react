name: Foodgram-app workflow

on: [push, workflow_dispatch]

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository exists
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: make deps
      
      - name: Apply isort, flake8
        run: make fix

      - name: Test with django tests
        run: make test

  build_and_push_to_docker_hub:
    name: Build project and push it to docker hub
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker 
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push to Docker Hub
      uses: docker/build-push-action@v2
      with:
        push: true
        context: ./backend/
        tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

  deploy:
    name: Deploy server on Yandex.Cloud
    runs-on: ubuntu-latest
    needs: [build_and_push_to_docker_hub]
    steps:
    - name: executing remote ssh commands to deploy 
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        stack_file_name: docker-compose.yaml
        scripts: |
          echo ${{ secrets.DOCKER_PASSWORD }} | sudo docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:v2.0
          sudo docker-compose stop
          sudo docker-compose rm web

          touch .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env 
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo DOMAIN_NAME=${{ secrets.DOMAIN_NAME }} >> .env

          sudo docker-compose up -d
          sudo docker-compose exec -T web python manage.py migrate --noinput
          sudo docker-compose exec -T web python manage.py collectstatic --no-input


  send_message:
    name: Send message to telegram
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
